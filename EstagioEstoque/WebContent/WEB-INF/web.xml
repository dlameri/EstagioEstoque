<?xml version="1.0" encoding="UTF-8"?>
<web-app 
    xmlns="http://java.sun.com/xml/ns/javaee" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
    version="3.0">
	<display-name>Stock</display-name>
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>

	<!-- Hibernate Session -->
	<filter>
		<filter-name>OpenSessionInView</filter-name>
		<filter-class>org.springframework.orm.hibernate4.support.OpenSessionInViewFilter</filter-class>
		
		<init-param>
			<param-name>singleSession</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>OpenSessionInView</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- Login Filter -->
	<filter>
		<filter-name>loginFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		<init-param>
		    <param-name>loginFilter</param-name>
		    <param-value>loginFilter</param-value>
		</init-param>
	</filter>
<!-- 	<filter-mapping> -->
<!-- 		<filter-name>loginFilter</filter-name> -->
<!-- 		<url-pattern>/web/*</url-pattern> -->
<!-- 	</filter-mapping> -->
	
	<servlet>
		<servlet-name>loginServlet</servlet-name>
		<servlet-class>org.springframework.web.context.support.HttpRequestHandlerServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>loginServlet</servlet-name>
		<url-pattern>/LoginServlet</url-pattern>
	</servlet-mapping>

	<!-- Spring -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath*:spring/applicationContext.xml
			classpath*:spring/dataSource.xml
		</param-value>
	</context-param>
	
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<!-- Struts2 -->
	<filter>
	    <filter-name>struts-prepare</filter-name>
	    <filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareFilter</filter-class>
	</filter>
	 
	<filter>
	    <filter-name>sitemesh</filter-name>
	    <filter-class>com.opensymphony.sitemesh.webapp.SiteMeshFilter</filter-class>
	</filter>
 
	<filter>
	    <filter-name>struts-execute</filter-name>
	    <filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsExecuteFilter</filter-class>
	</filter>
	 
	<filter-mapping>
	    <filter-name>struts-prepare</filter-name>
	    <url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- Sitemesh  -->
	<filter-mapping>
	    <filter-name>sitemesh</filter-name>
	    <url-pattern>/*</url-pattern>
	    <dispatcher>REQUEST</dispatcher>
	    <dispatcher>FORWARD</dispatcher>
	    <dispatcher>INCLUDE</dispatcher>
	</filter-mapping>
	 
	<filter-mapping>
	    <filter-name>struts-execute</filter-name>
	    <url-pattern>/web/*</url-pattern>
	</filter-mapping>
 	 
	<servlet>
	    <servlet-name>JspSupportServlet</servlet-name>
	    <servlet-class>org.apache.struts2.views.JspSupportServlet</servlet-class>
	    <load-on-startup>1</load-on-startup>
	</servlet>
	 
	<listener>
	    <listener-class>org.apache.struts2.dispatcher.ng.listener.StrutsListener</listener-class>
	</listener>
	
	<!-- REST -->
	<servlet>
		<servlet-name>JerseyRESTful</servlet-name>
		<servlet-class>com.sun.jersey.spi.spring.container.servlet.SpringServlet</servlet-class>
		<init-param>
			<param-name>com.sun.jersey.config.property.packages</param-name>
			<param-value>com.ideais.stock.webservice</param-value>
		</init-param>
		<init-param>
			<param-name>com.sun.jersey.api.json.POJOMappingFeature</param-name>
			<param-value>true</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<context-param>
		<param-name>resteasy.scan</param-name>
		<param-value>true</param-value>
	</context-param>

	<servlet-mapping>
		<servlet-name>JerseyRESTful</servlet-name>
		<url-pattern>/api/*</url-pattern>
	</servlet-mapping>

	
</web-app>